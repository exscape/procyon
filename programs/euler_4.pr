# A palindromic number reads the same both ways.
# The largest palindrome made from the product of two 2-digit numbers is 9009 = 91 Ã— 99.
# Find the largest palindrome made from the product of two 3-digit numbers.

func is_palindrome(n) {
	if n >= 0 && n < 10 { return 1; }
	else if n < 0 { n = abs(n); }

	num_digits = ceil(log10(n+1));
	i = 1;

	while i <= num_digits / 2 {
		# For the input 12345, the left side returns 1, then 2, then 3 ... while
		# the right side returns 5, 4, 3 ...
		# If the two don't match at any point, the number is not a palindrome.
		if  n // 10^(num_digits - i) % 10 != n // 10^(i-1) % 10 {
			return 0;
		}
		i += 1;
	}

	return 1;
}

x = 100;
max = 0;
while x < 1000 {
	x += 1;
	y = x;
	while y < 1000 {
		y += 1;

		prod = x * y;
		if prod > max && is_palindrome(prod) {
			print("new max with x y =", x, y);
			max = prod;
		}
	}
}

print(max);
max;  # Used by automated testing
